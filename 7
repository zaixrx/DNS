#include <stddef.h>
#include <stdlib.h>
#include <stdio.h>
#include "dnsutils.h"

/*
recursive resolver server:
1) lookup cache with TTL
2) query root server
3) query TLD server from root response(NS record)
4) query the authoritative server with respect to the domain your looking for to get the DNS record(A/AAAA/MX/CNAME) with UDP/IP
*/

#define HT_MIN_CAP 10

struct table_entry {
	uint32_t  TTL;
	in_addr_t IPv4;
};

typedef struct {
	size_t length;
	size_t capacity;
	struct table_entry *entries;
} HashTable;

HashTable *create_table();
int table_hash(HashTable*, const char*);
void table_append(HashTable*, const char*, struct table_entry);
struct table_entry *table_lookup(HashTable*, const char*);
int table_remove(HashTable*, const char*);
void destroy_table(HashTable*);

int main(void) {
	return EXIT_FAILURE;
}
